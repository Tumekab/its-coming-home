{"version":3,"sources":["components/Header.js","components/button.js","components/homepage.js","assets/icons/github.svg","components/footer.js","components/input.js","components/PlayerNames/PlayerNames.js","data/actions/state.js","components/PlayerNames/index.js","components/PlayerList/PlayerList.js","components/PlayerList/index.js","components/GenerateTeams/GenerateTeams.js","history.js","components/GenerateTeams/index.js","components/TeamSettings/TeamSettings.js","components/TeamSettings/index.js","components/Team1ScoreCard/Team1ScoreCard.js","components/Team1ScoreCard/index.js","components/Team2ScoreCard/Team2ScoreCard.js","components/Team2ScoreCard/index.js","components/DisplayTeams/DisplayTeams.js","components/DisplayTeams/index.js","App.js","reportWebVitals.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["Header","className","href","Button","label","type","Homepage","to","name","footer","rel","target","src","github","alt","Input","handleChange","value","htmlFor","id","onChange","playerNames","props","handlePlayerName","event","setState","playerName","currentTarget","state","teamsConfirmed","bind","handleSubmit","preventDefault","this","onSubmit","React","Component","splitIntoTeams","data","teamOne","team1Players","teamTwo","team2Players","connect","dispatch","addPlayer","PlayerNames","playerList","allPlayers","map","player","index","PlayerList","GenerateTeams","handleClick","onClick","createHashHistory","history","push","TeamSettings","handleTeam1Name","team1Name","handleTeam2Name","team2Name","teamNames","sendNamesToState","Team1ScoreCard","team1Score","team2Score","Team2ScoreCard","displayTeams","handleReset","handleShuffle","DisplayTeams","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initial","previousGames","reducer","action","newArray","playerArray","sort","Math","random","slice","teamName1","teamName2","updateTeam1Score","updateTeam2Score","gamesLoaded","saveGamesToApi","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04e197e1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => (\n    <>\n        <header className=\"headerBG\">\n            <h1 className=\"title\"><a href=\"/#/\">it's coming home</a></h1>\n        </header>\n        <h3 className=\"subTitle\">a 5-a-side team generator</h3>\n    </>\n)\n\nexport default Header;","const Button = ({ className, label, type }) => {\n    return (\n        <button \n            className={ className }\n            type={ type }>\n            { label }\n        </button>\n    )\n}\n\nexport default Button;","import React from \"react\";\nimport Button from \"./button\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Homepage = () => (\n    <main>\n        <section className=\"cardContainer infoContainer\">\n            <header className=\"cardHeader\">\n                <h2>how it works</h2>\n            </header>\n            <div className=\"cardMain\">\n                <ul>\n                    <li>pick your team names</li>\n                    <li>add your players</li>\n                    <li>generate your teams</li>\n                    <li>count your goals</li>\n                </ul>\n            </div>\n        </section>\n        <Link to={`/team-settings`}>\n            <Button \n                className=\"btn btnSettings\"\n                label= \"Settings\"\n                name= \"Settings\"\n            />\n        </Link>\n    </main>\n)\n\nexport default Homepage;","export default __webpack_public_path__ + \"static/media/github.d5e23d73.svg\";","import github from '../assets/icons/github.svg';\n\nconst footer = () => (\n    <footer>\n        <a href=\"https://github.com/Tumekab/football-team-generator\" rel=\"noreferrer\" target=\"_blank\"><img className=\"github\" src={github} alt=\"github link\"/></a>\n    </footer>\n)\n\nexport default footer;","\nconst Input = ({ name, label, handleChange, value, type}) => (\n    <div>\n        <label htmlFor={name} className=\"inputLabel playerLabel\">{ label }</label>\n        <input\n            id={name}\n            type={ type }\n            onChange={ handleChange }\n            value= { value }\n        />\n    </div>\n)\n\nexport default Input;","//players input\nimport React from \"react\";\nimport Input from '../input';\nimport Button from '../button';\n\n\nclass playerNames extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playerName: \"\",\n            teamsConfirmed: this.props.teamsConfirmed,\n        };\n\n        this.handlePlayerName = this.handlePlayerName.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n\n    handlePlayerName = (event) => {\n        this.setState({ playerName: event.currentTarget.value });  \n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.handleSubmit({ ...this.state });\n\n        this.setState({\n            playerName: \"\"\n        });\n    }\n\n    render(){\n        let { playerName } = this.state;\n        let { teamsConfirmed } = this.props;\n        \n        return (\n            <>\n                <section className=\"cardContainer\">\n                    <header className=\"cardHeader\">\n                        <h2>enter your players</h2>\n                    </header>\n                    <div className=\"cardMain\">\n                        <form onSubmit={ this.handleSubmit }>\n                            <Input \n                                label=\"Player Name\"\n                                handleChange={this.handlePlayerName}\n                                value={ playerName }\n                                type=\"text\"\n                            />\n                            <Button \n                                className=\"btn add-btn\"\n                                label= \"Add Player\"\n                                name= \"Add Player\"\n                            />\n                        </form>\n                    </div>\n                </section>\n            </>\n        );\n    }\n}\n\nexport default playerNames;","export const sendNamesToState = (data) => {\n    return {\n        type: \"SEND_NAMES_TO_STATE\",\n        teamNames: data,\n    }\n};\n\nexport const addPlayer = (data) => {\n    return {\n        type: \"ADD_PLAYER\",\n        data: data,\n    }\n};\n\nexport const splitIntoTeams = ( data ) => {\n    return {\n        type: \"GENERATE_TEAMS\",\n        teamOne: data.team1Players,\n        teamTwo: data.team2Players,\n    }\n};\n\nexport const updateTeam1Score = ( ) => {\n    return {\n        type: \"UPDATE_TEAM_1_SCORE\",\n    };\n}\n\nexport const updateTeam2Score = () => {\n    return {\n        type: \"UPDATE_TEAM_2_SCORE\",\n    };\n}\n\nexport const reset = () => {\n    return {\n        type: \"RESET\",\n    };\n};\n\n// export const saveGames = (data) => {\n//     return {\n//         type: \"SAVE_GAMES\",\n//         previousGames: data,\n//     };\n// };\n\n","import { connect } from \"react-redux\";\nimport PlayerNames from \"./PlayerNames\";\nimport { addPlayer } from \"../../data/actions/state\";\n\nconst mapStateToProps = ({ teamsConfirmed }) => {\n    return {\n        teamsConfirmed: teamsConfirmed,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSubmit: (data) => {\n            dispatch(addPlayer(data));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerNames);","const playerList = ({ allPlayers }) => {\n    return (\n        <div className=\"cardMain\">\n            <ul>\n                { allPlayers.map((player, index)=> (\n                    <li key={ index }>\n                        <p>{player.name}</p>   \n                    </li> \n                ))} \n            </ul>\n        </div>  \n    )\n}\n\nexport default playerList;","import { connect } from \"react-redux\";\nimport PlayerList from \"./PlayerList\";\n\nconst mapStateToProps = ({ allPlayers }) => {\n    return {\n        allPlayers: allPlayers,\n    }\n}\n\nexport default connect(mapStateToProps)(PlayerList);","const GenerateTeams = ({ handleClick }) => {\n    return (\n        <button \n            className=\"btn generateBtn\"\n            onClick={ handleClick }>\n            generate teams\n        </button>\n    )\n}\n\nexport default GenerateTeams;","import { createHashHistory } from \"history\";\nexport default createHashHistory();","import { connect } from 'react-redux';\nimport GenerateTeams from './GenerateTeams';\nimport { splitIntoTeams } from \"../../data/actions/state\";\nimport history from \"../../history\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (data) => {\n            dispatch(splitIntoTeams(data));\n            history.push(\"/team-selection\");\n        }\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(GenerateTeams);","// team names\n//team colours \n// player amount\nimport React from \"react\";\nimport Input from '../input';\nimport AddPlayers from '../PlayerNames';\nimport PlayerList from '../PlayerList';\nimport GenerateTeams from \"../GenerateTeams\";\nimport Button from '../button';\n\nclass TeamSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            team1Name: \"\",\n            team2Name: \"\",\n        };\n\n        this.handleTeam1Name = this.handleTeam1Name.bind(this);\n        this.handleTeam2Name = this.handleTeam2Name.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleTeam1Name = (event) => {\n        this.setState({ team1Name: event.currentTarget.value });  \n    }\n\n    handleTeam2Name = (event) => {\n        this.setState({ team2Name: event.currentTarget.value });  \n    }\n\n    handleSubmit = (event) => {  \n        event.preventDefault();\n        this.props.handleSubmit({ ...this.state });\n        this.setState({ team1Name: \"\", team2Name: \"\" });\n    }\n\n    render(){\n        let { team1Name, team2Name } = this.state;\n        \n        return (\n            <>\n                <section className=\"cardContainer\">\n                    <header className=\"cardHeader\">\n                        <h2>customise your teams</h2>\n                    </header>\n                    <div className=\"cardMain\">\n                        <form onSubmit={ this.handleSubmit }>\n                            <section className=\"inputContainer\">\n                                <Input \n                                    label=\"Choose Team One Name\"\n                                    handleChange={this.handleTeam1Name}\n                                    value={ team1Name }\n                                    type=\"text\"\n                                />\n                            {/* </section>     */}\n                      \n                            {/* <div className=\"teamDivider\"></div> */}\n                        {/* <section className=\"inputContainer\"> */}\n                            \n                                <Input \n                                label=\"Choose Team Two Name\"\n                                handleChange={this.handleTeam2Name}\n                                value={ team2Name }\n                                type=\"text\"\n                                />\n                            </section>\n                            <Button \n                                className=\"btn confirmBtn\"\n                                label= \"confirm\"\n                                name= \"confirm\"\n                            />\n                            {/* </section> */}\n                        </form>\n                    </div>\n                </section>\n                <AddPlayers />\n                <section className=\"cardContainer\">\n                    <header className=\"cardHeader\">\n                        <h2>your players</h2>\n                    </header>\n                    <PlayerList />\n                </section>\n                <GenerateTeams />\n            </>\n        );\n    }\n}\n\nexport default TeamSettings;\n\n","import { connect } from 'react-redux';\nimport TeamSettings from './TeamSettings';\nimport { sendNamesToState } from '../../data/actions/state';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSubmit: (data) => {\n            dispatch(sendNamesToState(data));\n        }\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(TeamSettings)","const Team1ScoreCard = ({ team1Name, team1Score, handleClick}) => {\n    return (\n        <>\n            <div>\n                  <h3>{ team1Name } <br/>Score:</h3>\n                  <div className=\"scoreBg\">\n                      <p className=\"teamScore\">{ team1Score }</p>\n                  </div>\n                  <div>\n                      <button \n                      onClick={ handleClick }\n                      className=\"btn plusBtn\">+</button>\n                  </div>\n            </div>\n         </>\n    )\n}\n\nexport default Team1ScoreCard;","import { connect } from \"react-redux\";\nimport Team1ScoreCard from \"./Team1ScoreCard\";\nimport { updateTeam1Score } from \"../../data/actions/state\";\n\nconst mapStateToProps = ({ team1Name, team1Score }) => {\n    return {\n        team1Name: team1Name,\n        team1Score: team1Score,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClick: (data) => {\n            dispatch(updateTeam1Score(data));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Team1ScoreCard);","const Team1ScoreCard = ({ team2Name, team2Score, handleClick}) => {\n    return (\n        <>\n            <div>\n                  <h3>{ team2Name }<br/>Score: </h3>\n                  <div className=\"scoreBg\">\n                      <p className=\"teamScore\">{ team2Score }</p>\n                  </div>\n                  <div>\n                      <button \n                      onClick={ handleClick }\n                      className=\"btn plusBtn\">+</button>\n                  </div>\n            </div>\n         </>\n    )\n}\n\nexport default Team1ScoreCard;","import { connect } from \"react-redux\";\nimport Team2ScoreCard from \"./Team2ScoreCard\";\nimport { updateTeam2Score } from \"../../data/actions/state\";\n\nconst mapStateToProps = ({ team2Name, team2Score }) => {\n    return {\n        team2Name: team2Name,\n        team2Score: team2Score,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClick: (data) => {\n            dispatch(updateTeam2Score(data));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Team2ScoreCard);","//display the teams that have been created\n\nimport Team1ScoreCard from '../Team1ScoreCard';\nimport Team2ScoreCard from '../Team2ScoreCard';\n\n\nconst displayTeams = ({ team1Players, team1Name, team2Players, team2Name, handleReset, handleShuffle }) => {\n    return (\n        <>\n            <main className=\"cardGrid\">\n                <section className=\"cardContainer\">\n                        <header className=\"cardHeader\">\n                            <h2>{team1Name}</h2>\n                        </header>\n                        <div className=\"cardMain\">\n                            <ul>\n                                { team1Players.map((player, index) => (\n                                    <li key={ index }>\n                                        <p>{ player.name }</p>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                        <div className=\"cardDivider\"></div>\n                        <Team1ScoreCard />\n                </section>\n                <section className=\"cardContainer\">\n                    <header className=\"cardHeader\">\n                        <h2>{team2Name}</h2>\n                    </header>\n                        <div className=\"cardMain\">\n                            <ul>\n                                {team2Players.map((player, index) => (\n                                    <li key={ index }>\n                                        <p>{ player.name }</p>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                        <div className=\"cardDivider\"></div>\n                        <Team2ScoreCard />\n                </section>\n                \n            </main> \n            <button\n                className=\"btn add-btn\"\n                label= \"reset\"\n                name= \"reset\"\n                onClick={ handleReset }>\n                reset\n            </button> \n            <button\n                className=\"btn add-btn\"\n                label= \"reshuffle\"\n                name= \"reshuffle\"\n                onClick={ handleShuffle }>\n                reshuffle teams\n            </button>    \n        </>\n    )\n}\n\nexport default displayTeams;","import { connect } from 'react-redux';\nimport DisplayTeams from './DisplayTeams';\nimport { reset } from '../../data/actions/state';\nimport { splitIntoTeams } from \"../../data/actions/state\";\nimport history from '../../history';\n\nconst mapStateToProps = ({ team1Players, team1Name, team2Players, team2Name }) => {\n    return {\n        team1Players: team1Players,\n        team1Name: team1Name,\n        team2Players: team2Players,\n        team2Name: team2Name,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleReset: () => { \n            dispatch(reset())\n            history.push(\"/team-settings\");\n        },\n        handleShuffle: (data) => { \n            dispatch(splitIntoTeams(data));\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTeams);","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './styles/main.css';\nimport Header from './components/Header';\nimport Homepage from './components/homepage';\nimport Footer from './components/footer';\nimport TeamSettings from './components/TeamSettings';\nimport TeamSelections from './components/DisplayTeams';\n// import MatchHistory from './components/MatchHistory';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n        <Switch>\n          <Route exact path='/'>\n              <Homepage /> \n          </Route>\n          <Route exact path='/team-settings'>\n            <TeamSettings />\n          </Route>\n          <Route exact path='/team-selection'>\n            <TeamSelections />\n          </Route>\n          {/* <Route exact path='/match-history'>\n            <MatchHistory />\n          </Route> */}\n        </Switch>\n        <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initial = {\n    team1Name: \"Team 1\",\n    team2Name: \"Team 2\",\n    team1Players: [],\n    team2Players: [],\n    allPlayers: [],\n    team1Score: 0,\n    team2Score: 0,\n    teamsConfirmed: false,\n    previousGames: false,\n}\n\nexport default initial;","import initial from \"./initial\";\n\nconst sendNamesToState = (state, { teamNames }) => {\n  return {\n      ...state,\n      team1Name: teamNames.team1Name,\n      team2Name: teamNames.team2Name,\n  }\n}\n\nconst addPlayer = (state, { data }) => {\n  return {\n      ...state,\n      allPlayers: [...state.allPlayers, { name: data.playerName }]\n  }\n}\n\nconst splitIntoTeams = (state, action) => {\n  let playerArray = state.allPlayers;\n\n  const shuffle = (playerArray) => playerArray.sort(() => 0.5 - Math.random());\n\n  let newArray = shuffle(playerArray);\n\n  let team1Players = newArray.slice(0, 5);\n  let team2Players = newArray.slice(5, 10);\n\n  return {\n      ...state,\n      team1Players: team1Players,\n      team2Players: team2Players,\n      teamName1: action.team1Name,\n      teamName2: action.team2Name,\n  }\n}\n\nconst updateTeam1Score = (state) => {\n  return {\n      ...state,\n      team1Score: state.team1Score + 1,\n  }\n}\nconst updateTeam2Score = (state) => {\n  return {\n      ...state,\n      team2Score: state.team2Score + 1,\n  }\n}\n\n//saving games reducer\nconst saveGamesToApi = (state, { previousGames }) => {\n  return {\n      ...state,\n      previousGames,\n      gamesLoaded: true\n  }\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n      case \"SEND_NAMES_TO_STATE\": \n        return sendNamesToState(state, action);\n      case \"ADD_PLAYER\":\n        return addPlayer(state, action);\n      case \"GENERATE_TEAMS\":\n        return splitIntoTeams(state, action);\n      case \"UPDATE_TEAM_1_SCORE\":\n        return updateTeam1Score(state, action);\n      case \"UPDATE_TEAM_2_SCORE\":\n        return updateTeam2Score(state, action);\n      case \"RESET\": \n      return {\n        ...initial,\n      };\n      case \"SAVE_GAMES\": \n        return saveGamesToApi(state, action);\n      default: return state;\n    };\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport initial from \"./initial\";\nimport reducer from \"./reducer\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n\treducer,\n\tinitial,\n\tcomposeEnhancers(applyMiddleware(thunk))\n\t);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './data/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}